syntax = "proto3";

package messaging;

import "user.proto";

service Messaging {
    // Space Channels
    rpc CreateSpaceChannel(CreateChannelRequest) returns (CreateChannelResponse);
    rpc UpdateSpaceChannelMetadata(UpdateChannelMetadataRequest) returns (UpdateChannelMetadataResponse);
    rpc DeleteSpaceChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ArchiveSpaceChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ActivateSpaceChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc GetSpaceChannel(GetSpaceChannelRequest) returns (ChannelDocument);
    rpc GetSpaceChannels(GetSpaceChannelsRequest) returns (GetSpaceChannelsResponse);
    rpc GetSpaceChannelCategories(GetSpaceChannelCategoriesRequest) returns (ChannelCategoryDocuments);
    rpc UpdateSpaceChannelOrder(UpdateSpaceChannelOrderRequest) returns (UpdateSpaceChannelOrderResponse);
    rpc CreateSpaceChannelCategory(CreateSpaceChannelCategoryRequest) returns (CreateSpaceChannelCategoryResponse);
    rpc UpdateSpaceChannelCategory(UpdateSpaceChannelCategoryRequest) returns (UpdateSpaceChannelCategoryResponse);
    rpc SetSpaceChannelCategoryOrder(SetSpaceChannelCategoryOrderRequest) returns (SetSpaceChannelCategoryOrderResponse);
    rpc SendSpaceChannelThreadMessage(SendSpaceChannelThreadMessageRequest) returns (SendSpaceChannelThreadMessageResponse);
    rpc CreateSpaceChannelFileUploadUrl(CreateSpaceChannelFileUploadUrlRequest) returns (CreateSpaceChannelFileUploadUrlResponse);
    rpc DeleteSpaceChannelCategory(UpdateSpaceChannelCategoryStatusRequest) returns (UpdateSpaceChannelCategoryStatusResponse);

    // Direct Channels
    rpc CreateDirectChannel(CreateDirectConversationRequest) returns (CreateDirectConversationResponse);
    rpc UpdateDirectChannelMetadata(UpdateChannelMetadataRequest) returns (UpdateChannelMetadataResponse);
    rpc DeleteDirectChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ArchiveDirectChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ActivateDirectChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ListDirectChannels(ListDirectChannelsRequest) returns (ConversationDocuments);
    rpc GetDirectChannelMessages(GetDirectChannelMessagesRequest) returns (GetDirectChannelMessagesResponse);
    rpc CreateDirectChannelFileUploadUrl(CreateDirectChannelFileUploadUrlRequest) returns (CreateDirectChannelFileUploadUrlResponse);

    // Thread Channels
    rpc CreateThreadChannel(CreateChannelRequest) returns (CreateChannelResponse);
    rpc UpdateThreadChannelMetadata(UpdateChannelMetadataRequest) returns (UpdateChannelMetadataResponse);
    rpc DeleteThreadChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ArchiveThreadChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);
    rpc ActivateThreadChannel(UpdateChannelStatusRequest) returns (UpdateChannelStatusResponse);

    // Space channel messages
    rpc SendSpaceChannelMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc UpdateSpaceChannelMessage(UpdateSpaceChannelMessageRequest) returns (UpdateSpaceChannelMessageResponse);
    rpc DeleteSpaceChannelMessage(DeleteSpaceChannelMessageRequest) returns (DeleteSpaceChannelMessageResponse);
    rpc GetSpaceChannelMessages(GetSpaceChannelMessagesRequest) returns (GetSpaceChannelMessagesResponse);
    rpc SendSpaceChannelMessageReaction(SendSpaceChannelMessageReactionRequest) returns (SendSpaceChannelMessageReactionResponse);
    rpc GetSpaceChannelMessageReactions(GetSpaceChannelMessageReactionsRequest) returns (GetSpaceChannelMessageReactionsResponse);
    rpc GetSpaceChannelThreadMessages(GetSpaceChannelThreadMessagesRequest) returns (GetSpaceChannelThreadMessagesResponse);
    rpc UpdateSpaceChannelThreadMessage(UpdateSpaceChannelThreadMessageRequest) returns (UpdateSpaceChannelThreadMessageResponse);
    rpc DeleteSpaceChannelThreadMessage(DeleteSpaceChannelThreadMessageRequest) returns (DeleteSpaceChannelThreadMessageResponse);
    rpc GetSpaceChannelThreadMessageReactions(GetSpaceChannelThreadMessageReactionsRequest) returns (GetSpaceChannelThreadMessageReactionsResponse);
    rpc SendSpaceChannelThreadMessageReaction(SendSpaceChannelThreadMessageReactionRequest) returns (SendSpaceChannelThreadMessageReactionResponse);
    rpc GetSpaceThreadChannel(GetSpaceThreadChannelRequest) returns (ChannelDocument);
    rpc GetSpaceChannelMessageReactionsSet(GetSpaceChannelMessageReactionsSetRequest) returns (GetSpaceChannelMessageReactionsSetResponse);
    rpc GetSpaceChannelUserMessageReactionsMap(GetSpaceChannelUserMessageReactionsMapRequest) returns (GetSpaceChannelUserMessageReactionsMapResponse);
    rpc GetSpaceThreadChannelMessageReactionsSet(GetSpaceThreadChannelMessageReactionsSetRequest) returns (GetSpaceThreadChannelMessageReactionsSetResponse);
    rpc GetSpaceThreadChannelUserMessageReactionsMap(GetSpaceThreadChannelUserMessageReactionsMapRequest) returns (GetSpaceThreadChannelUserMessageReactionsMapResponse);

    // Direct channel messages
    rpc SendDirectChannelMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc UpdateDirectChannelMessage(UpdateMessageRequest) returns (UpdateMessageResponse);
    rpc DeleteDirectChannelMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
    rpc GetDirectChannelMessageReactions(GetDirectChannelMessageReactionsRequest) returns (GetDirectChannelMessageReactionsResponse);
    rpc SendDirectChannelMessageReaction(SendDirectChannelMessageReactionRequest) returns (SendDirectChannelMessageReactionResponse);
    rpc CreateDirectChannelCall(CreateDirectChannelCallRequest) returns (CreateDirectChannelCallResponse);
    rpc CreateDirectChannelCallJoinToken(CreateDirectChannelCallJoinTokenRequest) returns (CreateDirectChannelCallJoinTokenResponse);
    rpc GetDirectChannelMessageReactionsSet(GetDirectChannelMessageReactionsSetRequest) returns (GetDirectChannelMessageReactionsSetResponse);
    rpc GetDirectChannelUserMessageReactionsMap(GetDirectChannelUserMessageReactionsMapRequest) returns (GetDirectChannelUserMessageReactionsMapResponse);

    // Thread channel messages
    rpc SendThreadChannelMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc UpdateThreadChannelMessage(UpdateMessageRequest) returns (UpdateMessageResponse);
    rpc DeleteThreadChannelMessage(DeleteMessageRequest) returns (DeleteMessageResponse);

    // Space Subscription
    rpc SubscribeToSpacePublicChannelMessages(SubscribeToSpacePublicChannelMessagesRequest) returns (SubscribeToSpacePublicChannelMessagesResponse);
    rpc UnsubscribeToSpacePublicChannelMessages(UnsubscribeToSpacePublicChannelMessagesRequest) returns (UnsubscribeToSpacePublicChannelMessagesResponse);
    rpc GetUserSubscribedTopics(GetUserSubscribedTopicsRequest) returns (GetUserSubscribedTopicsResponse);

    // Conversation Subscription
    rpc SubscribeToConversation(SubscribeToConversationRequest) returns (SubscribeToConversationResponse);
    rpc UnsubscribeToConversation(UnsubscribeToConversationRequest) returns (UnsubscribeToConversationResponse);

    // User Presence Subscriptions
    rpc SubscribeToUserPresence(SubscribeToUserPresenceRequest) returns (SubscribeToUserPresenceResponse);
    rpc UnsubscribeToUserPresence(UnsubscribeToUserPresenceRequest) returns (UnsubscribeToUserPresenceResponse);
}

message UpdateSpaceChannelCategoryStatusRequest {
    string space_id = 1;
    string category_id = 2;
    string user_role_id = 3;
}

message UpdateSpaceChannelCategoryStatusResponse {

}

message GetDirectChannelMessageReactionsSetRequest {
    string channel_id = 1;
}

message GetDirectChannelMessageReactionsSetResponse {
    repeated string message_ids = 1;
}

message GetDirectChannelUserMessageReactionsMapRequest {
    string channel_id = 1;
}

message GetDirectChannelUserMessageReactionsMapResponse {
    map<string, int64> reactions = 1;
}

message SubscribeToUserPresenceRequest {
    repeated string user_ids = 1;
}

message SubscribeToUserPresenceResponse {
}

message UnsubscribeToUserPresenceRequest {
    repeated string user_ids = 1;
}

message UnsubscribeToUserPresenceResponse {
}

message GetSpaceThreadChannelMessageReactionsSetRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    uint32 updated_at = 5;
}

message GetSpaceThreadChannelMessageReactionsSetResponse {
    repeated string message_ids = 1;
}

message GetSpaceThreadChannelUserMessageReactionsMapRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    uint32 updated_at = 5;
}

message GetSpaceThreadChannelUserMessageReactionsMapResponse {
    map<string, int64> reactions = 1;
}

message GetUserSubscribedConversationsRequest {
    string user_id = 1;
}

message GetUserSubscribedConversationsResponse {
    repeated string channel_ids = 1;
}

message SubscribeToConversationRequest {
    repeated string channel_ids = 1;
}

message SubscribeToConversationResponse {
}

message UnsubscribeToConversationRequest {
    repeated string channel_ids = 1;
}

message UnsubscribeToConversationResponse {
}

enum DOCUMENT_STATUS {
    PENDING = 0;
    APPROVED = 1;
    REJECTED = 2;
}

enum CHANNEL_STATUS {
    ACTIVE = 0;
    ARCHIVED = 1;
    DELETED = 2;
}

enum CHANNEL_VISIBILITY {
    PUBLIC = 0;
    PRIVATE = 1;
}

enum CHANNEL_TYPE {
    DIRECT = 0;
    GROUP = 1;
    SPACE = 2;
}

enum CHANNEL_CAPABILITY {
    TEXT = 0;
    IMAGE = 1;
    VOICE = 2;
    VIDEO = 3;
}

message GetUserSubscribedTopicsRequest {
    string user_id = 1;
}

message GetUserSubscribedTopicsResponse {
    repeated string topics = 1;
}

message SubscribeToSpacePublicChannelMessagesRequest {
    repeated string space_ids = 1;
}

message SubscribeToSpacePublicChannelMessagesResponse {
}

message UnsubscribeToSpacePublicChannelMessagesRequest {
    repeated string space_ids = 1;
}

message UnsubscribeToSpacePublicChannelMessagesResponse {
}

message GetSpaceChannelUserMessageReactionsMapRequest {
    string space_id = 1;
    string channel_id = 2;
    uint32 updated_at = 3;
}

message GetSpaceChannelUserMessageReactionsMapResponse {
    map<string, int64> reactions = 1;
}

message GetSpaceChannelMessageReactionsSetRequest {
    string space_id = 1;
    string channel_id = 2;
    uint32 updated_at = 3;
}

message GetSpaceChannelMessageReactionsSetResponse {
    repeated string message_ids = 1;
}

message GetSpaceThreadChannelRequest {
    string space_id = 1;
    string channel_id = 2;
    string thread_channel_id = 3;
    string message_id = 4;
}

message GetSpaceThreadChannelResponse {
    ChannelDocument document = 1;
}

message UpdateSpaceChannelThreadMessageRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    string thread_message_id = 5;
    MessageDocument document = 6;
}

message UpdateSpaceChannelThreadMessageResponse {
}

message DeleteSpaceChannelThreadMessageRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    string thread_message_id = 5;
}

message DeleteSpaceChannelThreadMessageResponse {
}

message GetSpaceChannelThreadMessageReactionsRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    string thread_message_id = 5;
}

message GetSpaceChannelThreadMessageReactionsResponse {
    map<string, uint32> reactions = 1;
}

message SendSpaceChannelThreadMessageReactionRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    string thread_message_id = 5;
    string reaction = 6;
    string device_id = 7;
}

message SendSpaceChannelThreadMessageReactionResponse {

}


message GetSpaceChannelThreadMessagesRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    uint64 start = 5;
    uint64 end = 6;
    bool ascending = 7;
}

message GetSpaceChannelThreadMessagesResponse {
    repeated MessageDocument documents = 1;
    uint64 total_count = 2;
}

message CreateSpaceChannelFileUploadUrlRequest {
    string channel_id = 1;
    string space_id = 2;
    string file_name = 3;
    string mime_type = 4;
    uint64 file_size = 5;
    uint64 preview_file_size = 6;
}

message CreateSpaceChannelFileUploadUrlResponse {
    string upload_url = 1;
    string download_url = 2;
    string preview_upload_url = 3;
    string preview_download_url = 4;
}

message SendSpaceChannelThreadMessageRequest {
    string channel_id = 1;
    MessageDocument message = 2;
    string space_id = 3;
    string message_id = 4;
}

message SendSpaceChannelThreadMessageResponse {
    string channel_id = 1;
    string message_id = 2;
    uint64 nonce = 3;
    string space_id = 4;
}

message UpdateSpaceChannelMessageRequest {
    string channel_id = 1;
    string message_id = 2;
    string space_id = 3;
    MessageDocument document = 4;
}

message UpdateSpaceChannelMessageResponse {
}

message GetSpaceChannelMessageReactionsRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
}

message GetSpaceChannelMessageReactionsResponse {
    map<string, uint32> reactions = 1;
}

message SendSpaceChannelMessageReactionRequest {
    string space_id = 1;
    string channel_id = 2;
    string message_id = 3;
    string reaction = 4;
    string user_role_id = 5;
    string device_id = 6;
}

message SendSpaceChannelMessageReactionResponse {
    uint32 count = 1;
}

message GetSpaceChannelMessagesRequest {
    string channel_id = 1;
    string space_id = 2;
    uint64 start = 4;
    uint64 end = 5;
    bool ascending = 6;
}

message GetSpaceChannelMessagesResponse {
    repeated MessageDocument documents = 1;
    uint64 total_count = 2;
}

message SetSpaceChannelCategoryOrderRequest {
    string space_id = 1;
    repeated string ids = 2;
    repeated uint32 scores = 3;
}

message SetSpaceChannelCategoryOrderResponse {

}

message GetSpaceChannelsResponse {
    repeated string documents = 1;
}

message UpdateSpaceChannelCategoryRequest {
    string space_id = 1;
    string category_id = 2;
    ChannelCategoryDocument category = 3;
}

message UpdateSpaceChannelCategoryResponse {
    string category_id = 1;
    uint64 nonce = 2;
}

message CreateSpaceChannelCategoryRequest {
    ChannelCategoryDocument category = 1;
    string space_id = 2;
    string user_role_id = 3;
}

message CreateSpaceChannelCategoryResponse {
    string category_id = 1;
    uint64 nonce = 2;
}

message ChannelCategoryDocuments {
    repeated ChannelCategoryDocument documents = 1;
}

message GetSpaceChannelCategoriesRequest {
    string space_id = 1;
}

message UpdateSpaceChannelOrderRequest {
    string space_id = 1;
    string category_id = 2;
    repeated string ids = 3;
    repeated uint32 scores = 4;
}

message UpdateSpaceChannelOrderResponse {

}

message ChannelReference {
    string message_id = 1;
    string space_id = 2;
    string channel_id = 3;
}

message ChannelMemberDocument {
    string document_id = 1;
    string role_id = 2;
    CHANNEL_MEMBER_STATUS status = 3;
    int64 status_expires_at = 4;
    int32 rank = 5;
    uint64 nonce = 6;
    DOCUMENT_STATUS document_status = 7;

    enum CHANNEL_MEMBER_STATUS {
        PENDING = 0;
        BANNED = 1;
        TIMEOUT = 2;
    }
}

message GetSpaceChannelRequest {
    string channel_id = 1;
    string space_id = 2;
}

message GetSpaceChannelsRequest {
    string space_id = 1;
    string category_id = 2;
}

message ChannelDocuments {
    repeated ChannelDocument documents = 1;
}

message UserChannelDocument {
    string channel_id = 1;
    int32 rank = 2;
    USER_CHANNEL_STATUS status = 3;
    uint64 nonce = 4;
    DOCUMENT_STATUS document_status = 5;

    enum USER_CHANNEL_STATUS {
        NEW = 0;
        ACCEPTED = 1;
    }
}

message ChannelCategoryDocument {
    string document_id = 1;
    string name = 2;
    string description = 3;
    string avatar_image_url = 4;
    string avatar_image_hash = 5;
    int32 rank = 6;
    repeated string role_ids = 7;
    uint64 nonce = 8;
    DOCUMENT_STATUS document_status = 9;
    STATUS status = 10;

    enum STATUS {
        ACTIVE = 0;
        ARCHIVED = 1;
        DELETED = 2;
    }
}

message ChannelRoleDocument {
    string document_id = 1;
    repeated int32 permission = 2;
    string name = 3;
    string description = 4;
    string avatar_image_url = 5;
    string avatar_image_hash = 6;
    int32 rank = 7;
    uint64 nonce = 8;
    DOCUMENT_STATUS document_status = 9;
}

message ChannelDocument {
    string document_id = 1;
    Metadata metadata = 2;
    CHANNEL_STATUS status = 3;
    CHANNEL_VISIBILITY visibility = 4;
    string message_id = 5;
    string space_id = 6;
    string channel_id = 7;
    string category_id = 8;
    int32 rank = 9;
    repeated CHANNEL_CAPABILITY capabilities = 10;
    uint64 nonce = 11;
    DOCUMENT_STATUS document_status = 12;
    string created_by = 13;

    message Metadata {
        string name = 1;
        string description = 2;
        string avatar_image_url = 3;
        string avatar_image_hash = 4;
        string banner_image_url = 5;
        string banner_image_hash = 6;
    }
}

message MessageDocument {
    enum MESSAGE_TYPE {
        TEXT = 0;
        FILE = 1;
        LINK = 2;
        CALL = 3;
    }

    message FileMetadata {
        string file_name = 1;
        uint64 file_size = 2;
        uint64 width = 3;
        uint64 height = 4;
        string image_blur_hash = 5;
        string preview_image_url = 6;
        uint32 preview_file_size = 7;
        string mime_type = 8;
        string file_url = 9;
        // These are only used for uploading and displaying it in the ui
        string file_path = 10;
        bytes file_bytes = 11;
    }

    message LinkMetadata {
        string title = 1;
        string description = 2;
        string image_url = 3;
        string image_blur_hash = 4;
        string color = 5;
        uint64 timestamp = 6;
    }

    message TextMetadata {
        uint64 length = 1;
        string words = 2;
        string language = 3;
        string sentiment = 4;
    }

    message Metadata {
        bool is_sensitive = 1;
        bool is_spoiler = 2;
        bool is_explicit = 3;
        bool is_ephemeral = 4;
        TextMetadata text_metadata = 5;
        FileMetadata file_metadata = 6;
        repeated LinkMetadata link_metadata = 7;
        string reply_message_sender_uid = 8;
        string reply_message_id = 9;
        string client_message_id = 10;
        string mime_type = 11;
        string message = 12;
        MESSAGE_TYPE message_type = 13;
    }

    message RenderFlags {
        bool is_same_sender_as_previous = 1;
        bool is_within_five_minute_as_previous = 2;
        string previous_message_id = 3;
    }

    Metadata metadata = 1;
    uint64 created_at = 2;
    string sender_uid = 3;
    string document_id = 4;
    bool is_deleted = 5;
    uint64 nonce = 6;
    DOCUMENT_STATUS document_status = 7;
    ReplyReference reply_ref = 8;
    string thread_channel_id = 9;
    RenderFlags render_flags = 10;
    repeated FileMetadata attachments = 11;
    bool has_reactions = 12;
}

message ReplyReference {
    string message_id = 1;
    string channel_id = 2;
    string space_id = 3;
    string uid = 4;
}

message CreateChannelRequest {
    ChannelDocument channel = 1;
    MessageDocument message = 2;
    repeated string members = 3;
    string user_role_id = 4;
}

message CreateChannelResponse {
    string channel_id = 1;
    uint64 nonce = 2;
}

message CreateDirectConversationRequest {
    repeated string members = 1;
    ChannelDocument channel = 2;
    MessageDocument message = 3;
    uint64 nonce = 4;
    string device_id = 5;
}

message CreateDirectConversationResponse {
    string channel_id = 1;
    uint64 nonce = 2;
}

message UpdateChannelMetadataRequest {
    string channel_id = 1;
    ChannelReference references = 2;
    ChannelDocument.Metadata metadata = 3;
}

message UpdateChannelMetadataResponse {
    string channel_id = 1;
    ChannelReference references = 2;
}

message UpdateChannelStatusRequest {
    string channel_id = 1;
    ChannelReference references = 2;
    string user_role_id = 3;
}

message UpdateChannelStatusResponse {
    string channel_id = 1;
    ChannelReference references = 2;
}

message SendMessageRequest {
    string channel_id = 1;
    MessageDocument message = 2;
    string space_id = 3;
}

message SendMessageResponse {
    string channel_id = 1;
    string message_id = 2;
    uint64 nonce = 3;
    string space_id = 4;
}

message UpdateMessageRequest {
    string channel_id = 1;
    MessageDocument.Metadata metadata = 2;
    string message_id = 3;
    uint64 nonce = 4;
}

message UpdateMessageResponse {
    string channel_id = 1;
    string message_id = 2;
    uint64 nonce = 3;
}

message DeleteMessageRequest {
    string channel_id = 1;
    string message_id = 2;
}

message DeleteSpaceChannelMessageRequest {
    string channel_id = 1;
    string message_id = 2;
    string space_id = 3;
}

message DeleteSpaceChannelMessageResponse {
}

message DeleteMessageResponse {
    string channel_id = 1;
    string message_id = 2;
}

enum CHANNEL_PERMISSION {
    // General
    administrator = 0;
     view_public_channels = 1;
     manage_channels = 2;
     manage_roles = 3;
     create_expressions = 4;
     manage_expressions = 5;
     view_audit_log = 6;
     manage_webhooks = 7;
     manage_space = 8;
    // Membership 
     create_invite = 9;
     change_nickname = 10;
     manage_nickname = 11;
     kick_members = 12;
     ban_members = 13;
     timeout_members = 14;
    // Text channel
     send_messages_and_create_posts = 15;
     send_messages_in_threads_and_posts = 16;
     create_public_threads = 17;
     create_private_threads = 18;
     embed_links = 19;
     attach_files = 20;
     add_reactions = 21;
     use_external_emoji = 22;
     allow_mention = 23;
     manage_messages = 24;
     manage_threads_and_posts = 25;
     read_message_history = 26;
     send_tts_messages = 27;
     use_application_commands = 28;
     send_voice_messages = 29;
  
    // Voice channel
     connect = 30;
     speak = 31;
     video = 32;
     use_activities = 33;
     use_soundboard = 34;
     use_external_sound = 35;
     use_voice_activity = 36;
     priority_speaker = 37;
     mute_members = 38;
     deafen_members = 39;
     move_members = 40;
  
    // Event
     create_event = 41;
     manage_events = 42;
     none  = 43;
  
    // Advanced
}

message UserConversations {
    repeated string channelIds = 1;
}

message UserConversationRequests {
    repeated string channelIds = 1;
}

message DirectChannelNewRequest {
    ChannelDocument channel = 1;
    repeated string members = 2;
    MessageDocument message = 3;
}

message ConversationDocument {
    ChannelDocument channel = 1;
    string members = 2;
}

message ConversationDocuments {
    repeated ConversationDocument documents = 1;
}

message ListDirectChannelsRequest {

}

message GetDirectChannelMessagesRequest {
    string channel_id = 1;
    uint64 start = 2;
    uint64 end = 3;
    bool ascending = 4;
}

message GetDirectChannelMessagesResponse {
    repeated MessageDocument documents = 1;
    uint64 total_count = 2;
}


message CreateDirectChannelFileUploadUrlRequest {
    string channel_id = 1;
    string file_name = 2;
    string mime_type = 3;
    uint64 file_size = 4;
    uint64 preview_file_size = 5; 
}

message CreateDirectChannelFileUploadUrlResponse {
    string upload_url = 1;
    string download_url = 2;
    string preview_upload_url = 3;
    string preview_download_url = 4;
}

message GetDirectChannelMessageReactionsRequest {
    string channel_id = 1;
    string message_id = 2;
}

message GetDirectChannelMessageReactionsResponse {
    map<string, uint32> reactions = 1;
}

message SendDirectChannelMessageReactionRequest {
    string channel_id = 1;
    string message_id = 2;
    string reaction = 3;
    string device_id = 4;
}

message SendDirectChannelMessageReactionResponse {

}

message CreateDirectChannelCallRequest {
    string channel_id = 1;
    string space_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
}

message CreateDirectChannelCallResponse {
    string call_id = 1;
    string token = 2;
}

message CreateDirectChannelCallJoinTokenRequest {
    string channel_id = 1;
    string space_id = 2;
    string message_id = 3;
    string thread_channel_id = 4;
    string session = 5;
}

message CreateDirectChannelCallJoinTokenResponse {
    string token = 1;
}