syntax = "proto3";

package ui;

import "messaging.proto";
import "user.proto";
import "space.proto";

message NewWindow {
    enum Type {
        APP = 0;
        SERVER_SETTINGS = 1;
    }
    
    Type type = 1;
    bytes data = 2;
    string initial_route = 3;
}

message Task {
    enum Type {
        START_OAUTH2_FLOW = 0;
        OPEN_NEW_WINDOW = 1;
    }

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    Type type = 1;
    bytes request = 2;
    string id = 3;
    bytes response = 4;
    string channel_id = 5;

    message OpenNewWindowRequest {
        SessionState.Space space = 1;
    }

    message OpenNewWindowResponse {
        Status status = 1;
        string error  = 2;
    }

    message StartOAuth2FlowRequest {
        user.SOCIAL provider = 1;
        string sign_up_token = 2;
    }

    message StartOAuth2FlowResponse {
        Status status = 1;
        string error  = 2;
        string url = 3;
    }
}

enum ConversationPanelState {
    MINIMIZED_LIST = 0;
    EXPANDED_LIST = 1;
    EXPANDED_CONVERSATION = 2;
}

enum ContentScreenSidePanelState {
    MINIMIZED_ONLINE_LIST = 0;
    EXPANDED_ONLINE_LIST = 1;
    EXPANDED_THREAD = 2;
}

enum ContentScreenState {
    MESSAGES = 0;
}

message SessionState {
    repeated Space spaces = 1;
    user.UserDocument user = 2;
    repeated Channel conversations = 3;
    ConversationPanelState conversation_panel_state = 4;
    string current_space_id = 5;
    repeated user.UserDocument users = 6;
    ContentScreenSidePanelState content_screen_side_panel_state = 7;

    message Space {
        space.SpaceDocument document = 1;
        repeated ChannelCategory channelCategories = 2;
        repeated string members = 3;
        repeated Role roles = 4;
        string current_channel_id = 5;
        repeated string current_user_roles = 6;
        map<string, uint32> unreadMessagesCountMap = 7;
    }

    message Role {
        space.SpaceRoleDocument document = 1;
        repeated string members = 2;
    }

    message SpaceSetting {
        enum NotificationSetting {
            NONE = 0;
            MENTIONS = 1;
            ALL = 2;
        }

        bool is_muted = 1;
        NotificationSetting notification_setting = 2;
    }
    
    message ChannelCategory {
        messaging.ChannelCategoryDocument document = 1;
        repeated Channel channels = 2;
    }
    
    message Channel {
        messaging.ChannelDocument document = 1;
        map<string, messaging.MessageDocument> messages = 2;
        repeated user.UserDocument members = 3;
        uint32 unread_count = 4;
        uint32 last_message_id = 5;
        float last_scroll_offset = 6;
        repeated messaging.MessageDocument messagesQueue = 7;
        string last_text_input = 8;
        uint32 last_seen_message_id = 9;
        repeated string reacted_messages = 10;
        map<string, int64> user_reactions_map = 11;
        messaging.ConversationDocument conversation = 12;
    }
}

enum TextFieldInputMode {
    DEFAULT = 0;
    REPLY = 1;
    EDIT = 2;
} 

message CustomTextNode {
    enum Type {
        TEXT = 0;
        MENTION = 1;
        LINK = 2;
        EMOJI = 3;
    }

    Type type = 1;
    string data = 2;
}

