syntax = "proto3";

package user;

service User {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc CreateUserEmailPassword(CreateUserEmailPasswordRequest)
      returns (CreateUserEmailPasswordResponse);
  rpc UpdateUserMetadata(UpdateUserMetadataRequest) returns (UpdateUserMetadataResponse);
  rpc DeleteUser(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  rpc BanUser(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  rpc SuspendUser(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  rpc ActivateUser(UpdateUserStatusRequest) returns (UpdateUserStatusResponse); 
  rpc ListenUser(GetUserRequest) returns (stream UserDocument);
  rpc GetUser(GetUserRequest) returns (UserDocument);
  rpc QueryUser(QueryUserRequest) returns (QueryUserResponse);
  rpc GetUserCustomizationProfile(GetUserCustomizationProfileRequest) returns (CustomizationProfileDocument);
  rpc DeleteUserCustomizationProfile(GetUserCustomizationProfileRequest) returns (DeleteUserCustomizationProfileResponse);
  rpc CreateUserCustomizationProfile(CreateUserCustomizationProfileRequest) returns (CustomizationProfileDocument);
  rpc UpdateUserCustomizationProfile(UpdateUserCustomizationProfileRequest) returns (UpdateUserCustomizationProfileResponse);
  rpc ListenUserCustomizationProfile(GetUserCustomizationProfileRequest) returns (stream CustomizationProfileDocument);
  rpc ListUserCustomizationProfiles(ListUserCustomizationProfilesRequest) returns (CustomizationProfileDocuments);
  rpc ListenUserCustomizationProfiles(ListUserCustomizationProfilesRequest) returns (stream CustomizationProfileDocument);
}

enum DOCUMENT_STATUS {
  PENDING = 0;
  APPROVED = 1;
  REJECTED = 2;
}

message GetUserCustomizationProfileRequest {
  string uid = 1;
  string customization_profile_id = 2;
}

message CreateUserCustomizationProfileRequest {
  string uid = 1;
  CustomizationProfileDocument document = 2;
}

message CreateUserCustomizationProfileResponse {

}

message DeleteUserCustomizationProfileResponse {

}

message UpdateUserCustomizationProfileRequest {
  string uid = 1;
  string customization_profile_id = 2;
  CustomizationProfileDocument updated_document = 3;
}

message UpdateUserCustomizationProfileResponse {
  
}

message ListUserCustomizationProfilesRequest {
  string uid = 1;
}

message CustomizationProfileDocument {
  string document_id = 1;
  string uid = 2;
  string name = 3;
  string iconURL = 4;
  string description = 5;
  fixed64 updated_at = 6;
  bytes json = 7;
  uint64 nonce = 8;
  DOCUMENT_STATUS document_status = 9;
  bool is_space = 10;
}

message CustomizationProfileDocuments {
  repeated string documents = 1;
}

enum USER_TYPE {
  USER = 0;
  MODERATOR = 1;
  ADMIN = 2;
}

enum USER_TIER {
  FREE = 0;
  PRO = 1;
  ENTERPRISE = 2;
}

enum USER_STATUS {
  ACTIVE = 0;
  BANNED = 1;
  SUSPENDED = 2;
  DELETED = 3;
  CREATING = 4;
}

enum USER_VISIBILITY {
  PUBLIC = 0;
  PRIVATE = 1;
}

enum USER_PRESENCE_STATUS {
  ONLINE = 0;
  OFFLINE = 1;
  AWAY = 2;
  BUSY = 3;
  INVISIBLE = 4;
  TYPING = 5;
  UNKNOWN = 6;
  LOADING = 7;
  LIVESTREAMING = 8;
}

enum SOCIAL {
  FACEBOOK = 0;
  GOOGLE = 1;
  TWITTER = 2;
  GITHUB = 3;
  LINKEDIN = 4;
  MICROSOFT = 5;
  INSTAGRAM = 9;
  PINTEREST = 10;
  REDDIT = 11;
  TUMBLR = 12;
  YOUTUBE = 14;
  DISCORD = 15;
}

message QueryUserRequest {
  string username = 1;
}

message QueryUserResponse {
  repeated UserDocument users = 1;
}

message GetUserRequest { string uid = 1; }

message UserDocument {
  string document_id = 1;
  Metadata metadata = 2; 
  USER_TIER tier = 3;
  USER_STATUS status = 4;
  int64 status_expiration = 5;
  USER_TYPE type = 6;
  repeated string search_terms = 7;
  USER_VISIBILITY visibility = 8;
  uint64 nonce = 9;
  DOCUMENT_STATUS document_status = 10;

  message Metadata {
    string username = 1;
    string email = 2;
    string display_name = 3;
    string bio = 4;
    SOCIAL social = 5;
    string social_id = 6;
    string avatar_image_url = 7;
    string avatar_image_hash = 8;
    string banner_image_url = 9;
    string banner_image_hash = 10;
  }
}

message UpdateUserMetadataRequest {
  string uid = 1;
  UserDocument.Metadata metadata = 2;
}

message UpdateUserMetadataResponse { string uid = 1; }

message UpdateUserStatusRequest {
  string uid = 1;
  int64 status_expiration = 2;
}

message UpdateUserStatusResponse { string uid = 1; }

message CreateUserRequest {
  SOCIAL social = 1;
  string oauth_code = 2;
}

message CreateUserResponse {
  string custom_token = 1;
}

message CreateUserEmailPasswordRequest {
  string email = 1;
  string password = 2;
}

message CreateUserEmailPasswordResponse {
  string custom_token = 1;
}

