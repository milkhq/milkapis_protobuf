syntax = "proto3";

package space;

import "messaging.proto";
import "theme.proto";

service Space {
  rpc CreateSpace(CreateSpaceRequest) returns (CreateSpaceResponse);
  rpc GetSpace(GetSpaceRequest) returns (SpaceDocument);
  rpc SubscribeSpace(GetSpaceRequest) returns (stream SpaceDocument);
  rpc QuerySpace(QuerySpaceRequest) returns (QuerySpaceResponse);
  rpc UpdateSpaceMetadata(UpdateSpaceMetadataRequest) returns (UpdateSpaceMetadataResponse);
  rpc DeleteSpace(UpdateSpaceStatusRequest) returns (UpdateSpaceStatusResponse);
  rpc ArchiveSpace(UpdateSpaceStatusRequest) returns (UpdateSpaceStatusResponse);
  rpc ActivateSpace(UpdateSpaceStatusRequest) returns (UpdateSpaceStatusResponse);
  rpc UpdateSpaceVisibility(UpdateSpaceVisibilityRequest) returns (UpdateSpaceVisibilityResponse);
  rpc UpdateSpaceCategory(UpdateSpaceCategoryRequest) returns (UpdateSpaceCategoryResponse);
  rpc CreateSpaceInvite(CreateSpaceInviteRequest) returns (CreateSpaceInviteResponse);
  rpc GetSpaceInvite(GetSpaceInviteRequest) returns (SpaceInviteDocument);
  rpc GetSpaceInvites(GetSpaceInviteRequest) returns (SpaceInviteDocuments);
  rpc SubscribeSpaceInvite(GetSpaceInviteRequest) returns (stream SubscribeSpaceInviteDocumentResponse);
  rpc DeleteSpaceInvite(DeleteSpaceInviteRequest) returns (DeleteSpaceInviteResponse);
  rpc QuerySpaceInvite(QuerySpaceInviteRequest) returns (QuerySpaceInviteResponse);
  rpc SubscribeQuerySpaceInvite(QuerySpaceInviteRequest) returns (stream QuerySpaceInviteResponse);
  rpc GetUserSpaces(GetUserSpacesRequest) returns (UserSpaceDocuments);
  rpc UpdateUserSpaceOrder(UpdateUserSpaceOrderRequest) returns (UpdateUserSpaceOrderResponse);
  rpc UpdateSpaceCustomization(UpdateSpaceCustomizationRequest) returns (UpdateSpaceCustomizationResponse);
  rpc CreateSpaceIconUploadUrl(CreateSpaceIconUploadUrlRequest) returns (CreateSpaceIconUploadUrlResponse);
  rpc CreateSpaceCustomBackgroundUploadUrl(CreateSpaceCustomBackgroundUploadUrlRequest) returns (CreateSpaceCustomBackgroundUploadUrlResponse);
  rpc JoinSpace(JoinSpaceRequest) returns (JoinSpaceResponse);
  rpc LeaveSpace(LeaveSpaceRequest) returns (LeaveSpaceResponse);
  rpc ListSpaceChannelMembers(ListSpaceChannelMembersRequest) returns (ListSpaceChannelMembersResponse);
  // Roles
  rpc CreateSpaceRole(CreateSpaceRoleRequest) returns (CreateSpaceRoleResponse);
  rpc GetSpaceRoles(GetSpaceRolesRequest) returns (GetSpaceRolesResponse);
  rpc UpdateSpaceRole(UpdateSpaceRoleRequest) returns (UpdateSpaceRoleResponse);
  rpc UpdateSpaceUserRoles(UpdateSpaceUserRolesRequest) returns (UpdateSpaceUserRolesResponse);
  rpc GetSpaceUserRoles(GetSpaceUserRolesRequest) returns (GetSpaceUserRolesResponse);
  rpc GetSpaceRoleMembers(GetSpaceRoleMembersRequest) returns (GetSpaceRoleMembersResponse);
  rpc CreateSpaceRoleIconUploadUrl(CreateSpaceRoleIconUploadUrlRequest) returns (CreateSpaceRoleIconUploadUrlResponse);
  rpc ResetSpaceRoles(ResetSpaceRolesRequest) returns (ResetSpaceRolesResponse);

  // User status list
  rpc GetSpaceUserStatusesList(GetSpaceUserStatusesListRequest) returns (GetSpaceUserStatusesListResponse);
  rpc UpdateSpaceUserStatus(UpdateSpaceUserStatusRequest) returns (UpdateSpaceUserStatusResponse);

  // Admin
  rpc CreateDefaultSpace(CreateSpaceRequest) returns (CreateSpaceResponse);
}

message ResetSpaceRolesRequest {
  string space_id = 1;
}

message ResetSpaceRolesResponse {
  string space_id = 1;
}

message CreateSpaceRoleIconUploadUrlRequest {
  string space_id = 1;
  string user_role_id = 2;
  uint64 file_size = 3;
}

message CreateSpaceRoleIconUploadUrlResponse {
  string upload_url = 1;
  string download_url = 2;
}

message GetSpaceRoleMembersRequest {
  string space_id = 1;
  string role_id = 2;
}

message GetSpaceRoleMembersResponse {
  string space_id = 1;
  string role_id = 2;
  repeated string members = 3;
}

// User status for a space in stored in a Hash Map
// { "uid": UserSpaceStatusDocument }
message UpdateSpaceUserStatusRequest {
  string space_id = 1;
  string uid = 2;
  UserSpaceStatusDocument status = 3;
  string user_role_id = 4;
}

message UpdateSpaceUserStatusResponse {
  string space_id = 1;
  string uid = 2;
}

enum SPACE_USER_STATUS {
  TIMEOUT = 0;
  KICKED = 1;
  BANNED = 2;
  NONE = 3;
}

message UserSpaceStatusDocument {
  SPACE_USER_STATUS status = 1;
  uint64 expired_at = 2;
  string uid = 3;
  uint64 updated_at = 4;
}

message GetSpaceUserStatusesListRequest {
  string space_id = 1;
}

message GetSpaceUserStatusesListResponse {
  repeated UserSpaceStatusDocument documents = 1;
}

message GetSpaceUserRolesRequest {
  string uid = 1;
  string space_id = 2;
}

message GetSpaceUserRolesResponse {
  string uid = 1;
  repeated string role_ids = 2;
}

message UpdateSpaceUserRolesRequest {
  string uid = 1;
  repeated string role_ids = 2;
  string user_role_id = 3;
  string space_id = 4;
  repeated string remove_role_ids = 5;
  repeated string add_role_ids = 6;
}

message UpdateSpaceUserRolesResponse {
  string uid = 1;
}

message UpdateSpaceRoleRequest {
  string space_id = 1;
  SpaceRoleDocument role = 2;
  string user_role_id = 3;
}

message UpdateSpaceRoleResponse {
  string space_id = 1;
}

message GetSpaceRolesRequest {
  string space_id = 1;
}

message SpaceRoleDocument {
  string document_id = 1;
  string name = 2;
  repeated messaging.CHANNEL_PERMISSION permissions = 3;
  string description = 4;
  uint64 updated_at = 5;
  uint32 priority = 6;
  string icon_url = 7;
  bool allow_mentions = 8;
  bool display_as_group = 9;
  uint32 color = 10;
}

message GetSpaceRolesResponse {
  string space_id = 1;
  repeated SpaceRoleDocument roles = 2;
}

// Space Roles are stored in a Hash Map
// Space roles
// For example:
// { "role_id": [CHANNEL_PERMISSION] }
// User roles mapping
// For example:
// {
//   "uid": ["role_id"],
// }
message CreateSpaceRoleRequest {
  string space_id = 1;
  SpaceRoleDocument role = 2;
  string user_role_id = 3;
  repeated string members = 4;
}

message CreateSpaceRoleResponse {
  string space_id = 1;
  string role_id = 2;
}

message ListSpaceChannelMembersRequest {
  string space_id = 1;
  string channel_id = 2;
  uint32 limit = 3;
  uint32 offset = 4;
  bool descending = 5;
}

message ListSpaceChannelMembersResponse {
  repeated string uids = 1;
  uint32 total = 2;
}

message LeaveSpaceRequest {
  string space_id = 1;
  string uid = 2;
}

message LeaveSpaceResponse {
  string space_id = 1;
}

message JoinSpaceRequest {
  string space_id = 1;
  string referrer_uid = 2;
}

message JoinSpaceResponse {
  string space_id = 1;
}

message CreateSpaceCustomBackgroundUploadUrlRequest {
  string space_id = 1;
  uint64 size = 2;
  uint64 preview_size = 3;
  string mime_type = 4;
  string preview_mime_type = 5;
}

message CreateSpaceCustomBackgroundUploadUrlResponse {
  string upload_url = 1;
  string download_url = 2;
  string preview_upload_url = 3;
  string preview_download_url = 4;
}

message CreateSpaceIconUploadUrlRequest {
  string space_id = 1;
  uint64 size = 2;
}

message CreateSpaceIconUploadUrlResponse {
  string upload_url = 1;
  string download_url = 2;
}

enum DOCUMENT_STATUS {
  PENDING = 0;
  APPROVED = 1;
  REJECTED = 2;
}

message UpdateUserSpaceOrderRequest {
  string uid = 1;
  repeated string ids = 2;
  repeated uint32 scores = 3;
}

message UpdateUserSpaceOrderResponse {

}

message UpdateSpaceCustomizationRequest {
  string space_id = 1;
  bytes customization = 2;
}

message UpdateSpaceCustomizationResponse {
  string space_id = 1;
}

message UserSpaceDocuments {
  repeated string documents = 1;
}

message GetUserSpacesRequest {
  string uid = 1;
}

message QuerySpaceInviteRequest {
  string space_id = 1;
  string uid = 2;
}

message QuerySpaceInviteResponse {
  repeated SpaceInviteDocument documents = 1;
}

message DeleteSpaceInviteRequest {
  string space_id = 1;
  string space_invite_document_id = 2;
}

message DeleteSpaceInviteResponse {
  string space_id = 1;
  string space_invite_document_id = 2;
}

message GetSpaceInviteRequest {
  string space_invite_document_id = 1;
  string space_id = 2;
}

message CreateSpaceInviteRequest {
  string space_id = 1;
  string uid = 2;
  uint64 nonce = 3;
}

message CreateSpaceInviteResponse {
  string space_invite_document_id = 1;
  uint64 nonce = 2;
}

message UpdateSpaceCategoryRequest {
  string space_id = 1;
  SPACE_CATEGORY category = 2;
}

message UpdateSpaceCategoryResponse {
  string space_id = 1;
}

message GetSpaceRequest { string space_id = 1; }

message QuerySpaceRequest {
  SPACE_CATEGORY category = 1;
  string search_term = 2; 
}

message QuerySpaceResponse {
  repeated SpaceDocument documents = 1;
}

message UpdateSpaceVisibilityRequest {
  string space_id = 1;
  SPACE_VISIBILITY visibility = 2;
}

message UpdateSpaceVisibilityResponse {
  string space_id = 1;
}

enum SPACE_CATEGORY {
  GENERAL = 0;
  GAMES = 1;
  SPORTS = 2;
  MUSIC = 3;
  ARTS = 4;
  TECH = 5;
  EDUCATION = 6;
  ENTERTAINMENT = 7;
  NEWS = 8;
  POLITICS = 9;
  RELIGION = 10;
  SCIENCE = 11;
  BUSINESS = 12;
  OTHER = 13;
}

enum SPACE_STATUS {
  ACTIVE = 0;
  ARCHIVED = 1;
  DELETED = 2;
}

enum SPACE_VISIBILITY {
  PUBLIC = 0;
  PRIVATE = 1;
}

message SpaceMemberPermissionDocument {
  string document_id = 1;
  repeated int32 permissions = 2;
}
message SpaceInviteDocument {
  string document_id = 1;
  string inviter_uid = 2;
  bool deleted = 3;
  uint64 nonce = 4;
  DOCUMENT_STATUS document_status = 5;
}
message SpaceInviteDocuments {
  repeated SpaceInviteDocument documents = 1;
}
message SubscribeSpaceInviteDocumentResponse {
  SpaceInviteDocument document = 1;
}
message SpaceDocument {
  message Metadata {
    string name = 1;
    string description = 2;
    string avatar_image_url = 3;
    string avatar_image_hash = 4;
    string banner_image_url = 5;
    string banner_image_hash = 6;
    repeated CustomBackground custom_backgrounds = 11;
    theme.ThemeOption theme_option = 12;
  }
  SPACE_STATUS status = 1;
  SPACE_VISIBILITY visibility = 2;
  string owner_uid = 3;
  Metadata metadata = 4;
  string document_id = 5;
  uint64 nonce = 6;
  SPACE_CATEGORY category = 7;
  repeated string search_terms = 8;
  DOCUMENT_STATUS document_status = 9;
  bytes customization = 10;
}

message CustomBackground {
  string url = 1;
  string image_hash = 2;
  string preview_image_url = 3;
  string preview_image_hash = 4;
  string mime_type = 5;
  string label = 6;
  string description = 7;
}

message CreateSpaceRequest {
  SpaceDocument document = 1;
}
message CreateSpaceResponse { 
  SpaceDocument document = 1; 
  messaging.ChannelDocument channel = 2;
  messaging.ChannelCategoryDocument category = 3;
}

message UpdateSpaceMetadataRequest {
  string space_id = 1;
  SpaceDocument.Metadata metadata = 2;
  string user_role_id = 3;
}
message UpdateSpaceMetadataResponse { string space_id = 1; }
message UpdateSpaceStatusRequest { string space_id = 1; string user_role_id = 2; }
message UpdateSpaceStatusResponse { }

message JoinSpacePayload {
  string space_id = 1;
  string uid = 2;
}